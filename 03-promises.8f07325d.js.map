{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAU,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEJ,WAAUC,UAEpBI,EAAO,CAAEL,WAAUC,UAGrBQ,QAAQC,IAAIR,E,GACXD,E,IAEL,OAAOC,C,CA/CIS,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBAEJ,IAAMC,EAAeF,EAAIG,OAAOC,SAChCT,QAAQC,IAAIM,GAEZ,IAAMG,EAAc,CAClBlB,MAAOmB,OAAOJ,EAAaf,MAAMoB,OACjCC,KAAMF,OAAOJ,EAAaM,KAAKD,OAC/BE,OAAQH,OAAOJ,EAAaO,OAAOF,QAErCZ,QAAQC,IAAIS,GAEZ,IAAK,IAAIK,EAAI,EAAGA,GAAKL,EAAYI,OAAQC,GAAK,EAC5CzB,EAAcyB,EAAGL,EAAYlB,OAC1BwB,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGjD8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAIjDkB,EAAYlB,OAASkB,EAAYG,KACjCb,QAAQC,IAAI,QAASS,EAAYlB,M,IAoBrC0B,EAAA9B,GAAS+B,OAAOK,KAAK,CACnBjC,SAAU,YACVkC,MAAO,QACPC,SAAU,OACVC,QAAS,EACTC,KAAK,EACLC,QAAS,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  const formElements = evt.target.elements;\n  console.log(formElements);\n\n  const arrayOfData = {\n    delay: Number(formElements.delay.value),\n    step: Number(formElements.step.value),\n    amount: Number(formElements.amount.value),\n  };\n  console.log(arrayOfData);\n\n  for (let i = 1; i <= arrayOfData.amount; i += 1) {\n    createPromise(i, arrayOfData.delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    arrayOfData.delay += arrayOfData.step;\n    console.log('dalay', arrayOfData.delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n\n      console.log(promise);\n    }, delay);\n  });\n  return promise;\n}\n\nNotiflix.Notify.init({\n  position: 'right-top',\n  width: '300px',\n  distance: '10px',\n  opacity: 1,\n  rtl: false,\n  timeout: 4000,\n});\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","promise","Promise","resolve","reject","setTimeout","Math","random","console","log","document","querySelector","addEventListener","evt","preventDefault","formElements","target","elements","arrayOfData","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","init","width","distance","opacity","rtl","timeout"],"version":3,"file":"03-promises.8f07325d.js.map"}